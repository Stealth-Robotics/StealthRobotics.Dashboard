<Window x:Class="StealthRobotics.Dashboard.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:a="clr-namespace:Adorners;assembly=AdornedControl"
        xmlns:local="clr-namespace:StealthRobotics.Dashboard.Controls"
        xmlns:api="clr-namespace:StealthRobotics.Dashboard.API.UI;assembly=StealthRobotics.Dashboard.API"
        xmlns:network="clr-namespace:StealthRobotics.Dashboard.API.Network;assembly=StealthRobotics.Dashboard.API"
        mc:Ignorable="d" Loaded="Window_Loaded" Closed="Window_Closed"
        Title="A very Stealthy dashboard" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Header="_File">
                <MenuItem Name="Save" Header="_Save" Click="Save_Click"/>
                <MenuItem Name="Load" Header="_Open" Click="Load_Click"/>
                <MenuItem Name="Plugins" Header="_Plugins" Click="Plugins_Click"/>
            </MenuItem>
            <MenuItem Header="O_ptions">
                <MenuItem IsCheckable="True" Header="Show _grid" IsChecked="{Binding ElementName=dashboardRoot, Path=ShowGridlines}"/>
                <MenuItem IsCheckable="True" Header="_Competition mode" Name="menuComp"
                          Checked="MenuItem_Checked" Unchecked="MenuItem_Unchecked"/>
            </MenuItem>
        </Menu>
        <a:AdornedControl IsAdornerVisible="True" Name="mainContent" Grid.Row="1">
            <a:AdornedControl.AdornerContent>
                <local:LeftSideTray x:Name="tray" Width="350" HorizontalAlignment="Left" Expanded="Tray_Expanded">
                    <TabControl Margin="1.5" SelectionChanged="TabControl_SelectionChanged">
                        <TabItem Name="sources" Header="Sources">
                            <TreeView Name="netTree" PreviewMouseDown="TreeView_MouseDown" MouseMove="TreeView_MouseMove" BorderBrush="Transparent">
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem">
                                        <Setter Property="IsExpanded" Value="True"/>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type network:NetworkTree}" ItemsSource="{Binding Children}">
                                        <TextBlock Text="{Binding Name}"/>
                                    </HierarchicalDataTemplate>
                                    <DataTemplate DataType="{x:Type network:NetworkElement}">
                                        <TextBlock Text="{Binding}"/>
                                    </DataTemplate>
                                </TreeView.Resources>
                            </TreeView>
                        </TabItem>
                        <TabItem Name="controls" Header="Controls">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <WrapPanel MouseDown="AvailableControls_MouseDown" MouseMove="AvailableControls_MouseMove" Name="availableControls"/>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </local:LeftSideTray>
            </a:AdornedControl.AdornerContent>
            <!--This sets a separate adorner layer for the grid and its contents-->
            <AdornerDecorator>
                <api:TileGrid Name="dashboardRoot" Rows="6" Columns="8" IsEditable="True" TileSizingMode="Uniform" 
                                  ShowGridlines="True" Background="Transparent" AllowDrop="True"
                                  DragEnter="DashboardRoot_DragEnter" Drop="DashboardRoot_Drop" DragOver="DashboardRoot_DragOver">
                    <api:TileGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Show grid" IsCheckable="True" IsChecked="{Binding ShowGridlines}"/>
                            <MenuItem Checked="MenuItem_Checked" Unchecked="MenuItem_Unchecked"
                                      Header="Competition mode" IsCheckable="True" Name="contextComp"/>
                        </ContextMenu>
                    </api:TileGrid.ContextMenu>
                    <api:SourcedControl Name="test1" api:TileGrid.Column="1" api:TileGrid.ColumnSpan="3" api:TileGrid.Row="2" api:TileGrid.RowSpan="2">
                        <api:SnapControl.PopupButtons>
                            <Button>A</Button>
                            <Button>B</Button>
                            <Button>C</Button>
                        </api:SnapControl.PopupButtons>
                        <Button Margin="20" Content="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type api:SourcedControl}}, Path=Source}"/>
                    </api:SourcedControl>
                    <local:NumberSpinner api:TileGrid.Row="5"/>
                    <local:NumberDisplay api:TileGrid.Row="5" api:TileGrid.Column="5"/>
                    <local:NumberSlider api:TileGrid.Row="1" api:TileGrid.Column="7"/>
                    <local:NumberSlider api:TileGrid.Column="10"/>
                    <local:BoolSwitch api:TileGrid.Column="11" api:TileGrid.Row="5"/>
                    <local:CameraViewSelector api:TileGrid.Row="2" api:TileGrid.Column="4"/>
                    <local:Selector api:TileGrid.Row="3" api:TileGrid.Column="12"/>
                    <local:Selector api:TileGrid.Row="4" api:TileGrid.Column="12"/>
                    <local:BoolIndicator api:TileGrid.Row="6" api:TileGrid.Column="12"/>
                </api:TileGrid>
            </AdornerDecorator>
        </a:AdornedControl>
    </Grid>
</Window>
